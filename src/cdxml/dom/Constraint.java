//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.25 at 04:25:40 PM CST 
//


package cdxml.dom;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="SupersededBy" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="color" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="Name" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="LineWidth" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="ConstraintType" default="Unknown"&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *             &lt;enumeration value="Unknown"/&gt;
 *             &lt;enumeration value="Distance"/&gt;
 *             &lt;enumeration value="Angle"/&gt;
 *             &lt;enumeration value="ExclusionSphere"/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *       &lt;attribute name="ConstraintMin" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="ConstraintMax" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="IgnoreUnconnectedAtoms" default="no"&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *             &lt;enumeration value="yes"/&gt;
 *             &lt;enumeration value="no"/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *       &lt;attribute name="DihedralIsChiral" default="no"&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *             &lt;enumeration value="yes"/&gt;
 *             &lt;enumeration value="no"/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *       &lt;attribute name="PointIsDirected" default="no"&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *             &lt;enumeration value="yes"/&gt;
 *             &lt;enumeration value="no"/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "constraint")
public class Constraint {

    @XmlAttribute(name = "id")
    @XmlSchemaType(name = "anySimpleType")
    protected String id;
    @XmlAttribute(name = "SupersededBy")
    @XmlSchemaType(name = "anySimpleType")
    protected String supersededBy;
    @XmlAttribute(name = "color")
    @XmlSchemaType(name = "anySimpleType")
    protected String color;
    @XmlAttribute(name = "Name")
    @XmlSchemaType(name = "anySimpleType")
    protected String name;
    @XmlAttribute(name = "LineWidth")
    @XmlSchemaType(name = "anySimpleType")
    protected String lineWidth;
    @XmlAttribute(name = "ConstraintType")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String constraintType;
    @XmlAttribute(name = "ConstraintMin")
    @XmlSchemaType(name = "anySimpleType")
    protected String constraintMin;
    @XmlAttribute(name = "ConstraintMax")
    @XmlSchemaType(name = "anySimpleType")
    protected String constraintMax;
    @XmlAttribute(name = "IgnoreUnconnectedAtoms")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String ignoreUnconnectedAtoms;
    @XmlAttribute(name = "DihedralIsChiral")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String dihedralIsChiral;
    @XmlAttribute(name = "PointIsDirected")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String pointIsDirected;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the supersededBy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSupersededBy() {
        return supersededBy;
    }

    /**
     * Sets the value of the supersededBy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSupersededBy(String value) {
        this.supersededBy = value;
    }

    /**
     * Gets the value of the color property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getColor() {
        return color;
    }

    /**
     * Sets the value of the color property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setColor(String value) {
        this.color = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the lineWidth property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLineWidth() {
        return lineWidth;
    }

    /**
     * Sets the value of the lineWidth property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLineWidth(String value) {
        this.lineWidth = value;
    }

    /**
     * Gets the value of the constraintType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getConstraintType() {
        if (constraintType == null) {
            return "Unknown";
        } else {
            return constraintType;
        }
    }

    /**
     * Sets the value of the constraintType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConstraintType(String value) {
        this.constraintType = value;
    }

    /**
     * Gets the value of the constraintMin property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getConstraintMin() {
        return constraintMin;
    }

    /**
     * Sets the value of the constraintMin property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConstraintMin(String value) {
        this.constraintMin = value;
    }

    /**
     * Gets the value of the constraintMax property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getConstraintMax() {
        return constraintMax;
    }

    /**
     * Sets the value of the constraintMax property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConstraintMax(String value) {
        this.constraintMax = value;
    }

    /**
     * Gets the value of the ignoreUnconnectedAtoms property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIgnoreUnconnectedAtoms() {
        if (ignoreUnconnectedAtoms == null) {
            return "no";
        } else {
            return ignoreUnconnectedAtoms;
        }
    }

    /**
     * Sets the value of the ignoreUnconnectedAtoms property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIgnoreUnconnectedAtoms(String value) {
        this.ignoreUnconnectedAtoms = value;
    }

    /**
     * Gets the value of the dihedralIsChiral property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDihedralIsChiral() {
        if (dihedralIsChiral == null) {
            return "no";
        } else {
            return dihedralIsChiral;
        }
    }

    /**
     * Sets the value of the dihedralIsChiral property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDihedralIsChiral(String value) {
        this.dihedralIsChiral = value;
    }

    /**
     * Gets the value of the pointIsDirected property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPointIsDirected() {
        if (pointIsDirected == null) {
            return "no";
        } else {
            return pointIsDirected;
        }
    }

    /**
     * Sets the value of the pointIsDirected property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPointIsDirected(String value) {
        this.pointIsDirected = value;
    }

}
